---

- name: aliases into shrc
  blockinfile:
    dest: ~/.shrc
    create: yes
    marker: "# {mark} alias {{item.key}}"
    block: |
      alias {{ item.key }}="{{ item.value }}"
  with_dict: "{{aliases}}"
  vars:
    aliases:
      clip: xclip -selection c
      sshpbkcopy: cat ~/.ssh/id_rsa.pub | awk 'NR > 1 { print prev } { prev=$0 } END { ORS=\"\"; print }' | xclip -selection c

- name: shell functions for ubuntu
  tags: ubuntu
  blockinfile:
    dest: ~/.shrc
    create: yes
    marker: "# ANSIBLE {mark} shell functions for ubuntu"
    block: |
      wgetAndExecute() {
        URL=$1
        FILE=`mktemp`
        wget "$URL" -O $FILE
          chmod +x $FILE
          $FILE	
        rm $FILE
      }
      wgetAndDpkg() {
        cd ~
        URL=$1
        FILE=`mktemp`
        wget "$URL" -O $FILE && sudo dpkg -i --force-depends $FILE	
        rm $FILE
      }
      wgetAndSh() {
        URL=$1
        FILE=`mktemp`
        wget "$URL" -O $FILE
        sh $FILE
        rm $FILE
      }
      getAndExtract() {
          DWN_DEST=`mktemp -d`
          EXTRACT_DEST=`mktemp -d`
          DEST=${2}
          wget --content-disposition ${1} -P ${DWN_DEST}
          for f in ${DWN_DEST}/* 
          do
            echo "extracting file ${f} into ${EXTRACT_DEST}..."
            mkdir -p ${EXTRACT_DEST}
            extract ${f} ${EXTRACT_DEST}
          done
          [[ -w ${DEST} ]] && needSU=1
          echo ${needSU}
          rm -rf ${DWN_DEST}
          rm -rf ${EXTRACT_DEST}
      }
      extract() {
        if [ -z "$1" ]; then
          echo "Usage: extract <path/file_name>.<zip|rar|bz2|gz|tar|tbz2|tgz|Z|7z|xz|ex|tar.bz2|tar.gz|tar.xz>"
        else
          if [ -f $1 ] ; then
            if [ $# -eq 2 ]; then 
              DEST=$2
            else 
              DEST=${1%.*}
            fi

            case $1 in
            # *.tar.bz2)   tar xvjf ../$1    ;;
            *.tar.gz)    tar xvzf ${DEST} $1    ;;
            # *.tar.xz)    tar xvJf ../$1    ;;
            # *.lzma)      unlzma ../$1      ;;
            # *.bz2)       bunzip2 ../$1     ;;
            # *.rar)       unrar x -ad ../$1 ;;
            # *.gz)        gunzip ../$1      ;;
            *.tar)       tar xvf ${DEST} $1     ;;
            # *.tbz2)      tar xvjf ../$1    ;;
            *.tgz)       tar -xvzf ${1} --directory=${DEST}    ;;
            *.zip)       unzip -d ${DEST} $1      ;;
            # *.Z)         uncompress ../$1  ;;
            *.7z)        7z x $1 -o${DEST}        ;;
            # *.xz)        unxz ../$1        ;;
            # *.exe)       cabextract ../$1  ;;
            *)           echo "extract: '$1' - unknown archive method" ;;
            esac
          else
            echo "$1 - file does not exist"
          fi
        fi
      }
      newxp() {
        dir=$(randstring8)
        mkcd ~/dev/experiments/${dir}
        code .
      }
      newgoXP() {
        dir=$(randstring8)
        mkcd ~/dev/go/src/experiments/${dir}
        code .
      }

- name: env vars for ubuntu
  tags: ubuntu,debug
  blockinfile:
    dest: ~/.shrc
    create: yes
    marker: "# ANSIBLE {mark} shell functions for ubuntu"
    block: |
      EDITOR=nano