---

- name: install brew packages
  tags: mac
  homebrew: 
    state: present
    name: [ node, npm, yarn, watchman, gradle, maven ]

- tags: mac
  shell: npm install -g react-native-cli

- shell: nix-env -iA nixos.android-studio
  tags: ubuntu

- name: install brew cask packages
  tags: mac
  ignore_errors: yes
  homebrew_cask:
    state: present
    name: [
      adoptopenjdk/openjdk/adoptopenjdk8,
      intel-haxm,
      android-sdk,
      android-ndk,
      android-studio
      android-platform-tools
    ]

- name: mobile dev env vars (mac?)
  tags: mac
  blockinfile:
    path: ~/.shrc
    create: yes
    marker: "# ANSIBLE {mark} mobile dev: env vars"
    block: |
      export MAVEN_HOME=/usr/local/opt/maven
      export GRADLE_HOME=/usr/local/opt/gradle
      export ANDROID_NDK_HOME=/usr/local/share/android-ndk
      export INTEL_HAXM_HOME=/usr/local/Caskroom/intel-haxm
      export PATH=$PATH:$MAVEN_HOME/bin
      export PATH=$PATH:$GRADLE_HOME/bin

      export ANDROID_SDK_ROOT=$HOME/Library/Android/sdk # also called ANDROID_HOME
      export PATH=$PATH:$ANDROID_SDK_ROOT/tools
      export PATH=$PATH:$ANDROID_SDK_ROOT/tools/bin
      export PATH=$PATH:$ANDROID_SDK_ROOT/emulator
      export PATH=$PATH:$ANDROID_SDK_ROOT/platform-tools
      export PATH=$PATH:$ANDROID_SDK_ROOT/build-tools/28.0.3

      export PATH=$PATH:$HOME/.local/share/flutter/bin

- shell: |
    touch ~/.android/repositories.cfg
    yes | $ANDROID_SDK_ROOT/tools/bin/sdkmanager --licenses
    sdkmanager "tools" "platform-tools"
    sdkmanager "platforms;android-28"
    sdkmanager "build-tools;28.0.3"
    sdkmanager "extras;android;m2repository"
    sdkmanager "extras;google;m2repository"
    sdkmanager "sources;android-28"
    sdkmanager "platforms;android-28"
    sdkmanager --install "system-images;android-28;google_apis_playstore;x86_64"
    avdmanager create avd -n pixel2 -k "system-images;android-28;google_apis_playstore;x86_64" --device 17
    # android update sdk --components=sys-img-x86-android-28
    # android update sdk --no-ui


- name: flutter mac
  tags: mac
  shell: |
    git clone -b beta https://github.com/flutter/flutter.git $HOME/.local/share/flutter
    flutter doctor
    flutter doctor --android-licenses

- name: ios dev toolchain
  tags: mac
  shell: |
    xcode-select --switch /Applications/Xcode.app/Contents/Developer
  become: true
  become_method: sudo
- name: ios dev toolchain, brew packages
  tags: mac
  homebrew: 
    state: present
    name: [ usbmuxd, libimobiledevice, ideviceinstaller, ios-deploy, cocoapods ]
- name: ios dev toolchain, brew link
  tags: mac
  shell: |
    brew unlink usbmuxd
    brew link usbmuxd
    pod setup

    # make_standalone_toolchain.py is apparently deprecated
# - name: rust mobile (mac?) 
#   tags: mac
#   shell: |
#     mkdir ~/.NDK
#     ${ANDROID_NDK_HOME}/build/tools/make_standalone_toolchain.py --api 26 --arch arm64 --install-dir ~/.NDK/arm64;
#     ${ANDROID_NDK_HOME}/build/tools/make_standalone_toolchain.py --api 26 --arch arm --install-dir ~/.NDK/arm;
#     ${ANDROID_NDK_HOME}/build/tools/make_standalone_toolchain.py --api 26 --arch x86 --install-dir ~/.NDK/x86;

- name: rust mobile build toolchains (mac?)
  tags: mac
  blockinfile:
    path: ~/.cargo/config
    create: yes
    marker: "# ANSIBLE {mark} rust mobile build toolchains"
    block: |
      [target.aarch64-linux-android]
      ar = ".NDK/arm64/bin/aarch64-linux-android-ar" ### NOPE CHANGE
      linker = ".NDK/arm64/bin/aarch64-linux-android-clang"

      [target.armv7-linux-androideabi]
      ar = ".NDK/arm/bin/arm-linux-androideabi-ar"
      linker = ".NDK/arm/bin/arm-linux-androideabi-clang"

      [target.i686-linux-android]
      ar = ".NDK/x86/bin/i686-linux-android-ar"
      linker = ".NDK/x86/bin/i686-linux-android-clang"
