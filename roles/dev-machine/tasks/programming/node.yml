---

- name: Install packages from Homebrew
  tags: mac
  homebrew: name={{ item }} state=present
  with_items:
    - node
    - npm
    - yarn

# - name: install node dependencies on ubuntu
#   tags: ubuntu
#   apt: name={{ item }} state=present
#   become: true
#   become_method: sudo
#   with_items:
#     - nodejs
#     - npm

# - file: path="/home/{{ ansible_env.USER }}/.local/share/{{ item.name }}" state=directory
# - name: node+npm on ubuntu
#   tags: ubuntu
#   unarchive:
#     src: https://nodejs.org/dist/v10.14.1/node-v10.14.1-linux-x64.tar.xz
#     dest: /home/{{ ansible_env.USER }}/.local/share/nodejs
#     remote_src: yes

- include: "{{ role_path }}/modules/getExtract.yml"
  tags: ubuntu
  with_items:
    - { name: 'nodejs', url: 'https://nodejs.org/dist/v10.14.1/node-v10.14.1-linux-x64.tar.xz' }
- name: put node+npm on path
  tags: ubuntu
  blockinfile:
    path: ~/.shrc
    create: yes
    marker: "# ANSIBLE {mark} node on PATH"
    block: |
      export PATH=$PATH:$HOME/.local/share/node-v10.14.1-linux-x64/bin

# - name: install nvm
#   tags: ubuntu
#   shell: |
#     curl -o- -L https://yarnpkg.com/install.sh | bash


# - name: install nvm
#   tags: ubuntu
#   ignore_errors: yes
#   shell: |
#     curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.32.1/install.sh | bash
#     export NVM_DIR="$HOME/.cache/nvm"
#     [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
#     nvm install node
