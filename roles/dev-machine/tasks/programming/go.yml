---

- name: installing go from homebrew
  homebrew: name={{ item }} state=present
  with_items:
    - go
  tags: mac

# - name: install go on ubuntu
#   apt: name={{ item }} state=present
#   with_items:
#     - go
#   tags: ubuntu

- name: create /usr/local/go directory
  tags: ubuntu
  become: true
  become_method: sudo
  file: path=/usr/local/go state=directory
- name: download and unpack go on ubuntu
  tags: ubuntu
  become: true
  become_method: sudo
  unarchive:
    src: https://dl.google.com/go/go1.11.linux-amd64.tar.gz
    dest: /usr/local
    remote_src: yes

# - name: set go env
#   lineinfile: dest=~/.shrc line='{{ item }}' state=present create=yes
#   with_items:    
#     - "export GOPATH=$HOME/.cache/go:$HOME"
#     - "export PATH=$PATH:/usr/local/go/bin:$HOME/.cache/go/bin:$HOME/bin"

- name: set go env
  blockinfile:
    path: ~/.shrc
    create: yes
    block: |
      export GOPATH=$HOME/.cache/go:$HOME
      export PATH=$PATH:/usr/local/go/bin:$HOME/.cache/go/bin:$HOME/bin
      export GO111MODULE=on


- name: make dir ~/src
  file: path=~/src state=directory

# - name: source go env
#   command: pwd && source ~/.shrc

- name: go get some packages
  ignore_errors: yes
  shell: |
    go get -u golang.org/x/tools/cmd/godoc
    go get -u github.com/golang/lint/golint
    go get -u github.com/golang/dep/cmd/dep

# - name: set vscode gopath
#   command: cat "$HOME/Library/Application Support/Code/User/settings.json" | jq .body.test2 = ["hello"] > "$HOME/Library/Application Support/Code/User/settings.json"
#   echo '{"foo":"bar"}' | jq '.body.test2 = ["hi"]' > ~/.somefile

# - name: set vscode gopath
#   shell: |
#     TJQ=$(cat $HOME/Library/Application\ Support/Code/User/settings.json | jq '.body.test2=["hi"]')
#     echo ${TJQ} > $HOME/Library/Application\ Support/Code/User/settings.json
    # sh -c "TJQ=$(cat $HOME/Library/Application\ Support/Code/User/settings.json | jq '.body.test2=["hello"]')"
  #   br=$(mktemp)
  #   jq 
  # cat /tmp/somefile | jq '.body.test2=["hello"]' > /tmp/somefile
  # echo '{"foo":"bar"}' | jq '.body.test2 = ["hi"]' > /tmp/somefile
  # cat /tmp/somefile
  # cat /tmp/somefile | jq '.body.test1=["hello"]' > /tmp/somefile
  # cat /tmp/somefile

- name: add go extension settings on mac
  include: "{{ role_path }}/modules/jqInsertIntoObject.yml"
  tags: mac
  with_items:
    # - { filePath: '$HOME/Library/Application\ Support/Code/User/settings.json', jqCommand: '."go.lintOnSave"=true' }
    # - { filePath: '$HOME/Library/Application\ Support/Code/User/settings.json', jqCommand: '."go.vetOnSave"=true' }
    - { filePath: '$HOME/Library/Application\ Support/Code/User/settings.json', jqCommand: '."go.lintTool"="golint"' }
    # - { filePath: '$HOME/Library/Application\ Support/Code/User/settings.json', jqCommand: '."go.formatOnSave"=true' }
    - { filePath: '$HOME/Library/Application\ Support/Code/User/settings.json', jqCommand: '."go.formatTool"="goreturns"' }
    - { filePath: '$HOME/Library/Application\ Support/Code/User/settings.json', jqCommand: '."go.gopath"="$HOME/.cache/go:$HOME"' }

    
#   tags: ubuntu
#   with_items:
#     - { name: 'vscode', url: 'https://az764295.vo.msecnd.net/stable/3aeede733d9a3098f7b4bdc1f66b63b0f48c1ef9/code_1.22.2-1523551015_amd64.deb' }